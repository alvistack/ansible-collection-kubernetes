---

# Copyright 2023 Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: 70-kube_csi_rbd-verify | kube_master
  hosts: kube_master
  remote_user: root
  become: true
  tasks:
    - name: kubectl version --output=yaml
      ansible.builtin.command:
        cmd: kubectl version --output=yaml
      register: result
      changed_when: result is not succeeded

    - name: kubectl get pod --all-namespaces
      ansible.builtin.shell:
        cmd: |
          set -euxo pipefail
          kubectl get pod --all-namespaces | egrep -e 'csi-rbd\s+csi-rbd-provisioner-\S+\s+[0-9]+\/[0-9]+\s+Running'
      args:
        executable: "/bin/bash"
      when: inventory_hostname == groups['kube_master'][0]
      register: result
      until: result is succeeded
      changed_when: result is not succeeded
      retries: 60

    - name: setup csi-rbd as default storageclass
      vars:
        ansible_python_interpreter: "python3"
      kubernetes.core.k8s:
        state: "present"
        wait: true
        definition:
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: csi-rbd
            annotations:
              storageclass.kubernetes.io/is-default-class: "true"
      when: inventory_hostname == groups['kube_master'][0]
      register: result
      until: result is succeeded
      changed_when: result is not succeeded
      retries: 60

    - name: create pvc
      vars:
        ansible_python_interpreter: "python3"
      kubernetes.core.k8s:
        state: "present"
        wait: true
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: root
            namespace: default
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 100Mi
      when: inventory_hostname == groups['kube_master'][0]
      register: result
      until: result is succeeded
      changed_when: result is not succeeded
      retries: 60

    - name: create pod
      vars:
        ansible_python_interpreter: "python3"
      kubernetes.core.k8s:
        state: "present"
        wait: true
        definition:
          apiVersion: v1
          kind: Pod
          metadata:
            name: busybox
            namespace: default
          spec:
            containers:
              - name: busybox
                image: docker.io/busybox:latest
                command:
                  - sleep
                  - "3600"
                volumeMounts:
                  - name: root
                    mountPath: /root
            volumes:
              - name: root
                persistentVolumeClaim:
                  claimName: root
      when: inventory_hostname == groups['kube_master'][0]
      register: result
      until: result is succeeded
      changed_when: result is not succeeded
      retries: 60

    - name: kubectl get pod --all-namespaces
      ansible.builtin.shell:
        cmd: |
          set -euxo pipefail
          kubectl get pod --all-namespaces | egrep -e 'default\s+busybox\s+[0-9]+\/[0-9]+\s+Running'
      args:
        executable: "/bin/bash"
      when: inventory_hostname == groups['kube_master'][0]
      register: result
      until: result is succeeded
      changed_when: result is not succeeded
      retries: 60

    - name: delete pod
      vars:
        ansible_python_interpreter: "python3"
      kubernetes.core.k8s:
        state: "absent"
        wait: true
        definition:
          apiVersion: v1
          kind: Pod
          metadata:
            name: busybox
            namespace: default
      when: inventory_hostname == groups['kube_master'][0]
      register: result
      until: result is succeeded
      changed_when: result is not succeeded
      retries: 60

    - name: delete pvc
      vars:
        ansible_python_interpreter: "python3"
      kubernetes.core.k8s:
        state: "absent"
        wait: true
        definition:
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: root
            namespace: default
      when: inventory_hostname == groups['kube_master'][0]
      register: result
      until: result is succeeded
      changed_when: result is not succeeded
      retries: 60
